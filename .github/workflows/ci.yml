name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:6-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      postgres:
        image: postgres:13-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Setup
        run: npm run setup
        env:
          NODE_ENV: test

      - name: Test
        run: npm run test -- --ci
        env:
          NODE_ENV: test
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Truncate and seed database
        run: npm run -w @argos-ci/database db:truncate && npm run -w @argos-ci/database db:seed
        env:
          NODE_ENV: test

      - name: Add hosts to /etc/hosts
        run: |
          sudo echo "127.0.0.1 app.argos-ci.dev" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 api.argos-ci.dev" | sudo tee -a /etc/hosts

      - name: Launch app
        run: npx argos-web > /dev/null 2>&1 &
        env:
          NODE_ENV: test

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test
        env:
          NODE_ENV: test

      - name: Run Argos
        continue-on-error: true
        run: npx @argos-ci/cli upload screenshots
